<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes</title>
    <link>http://example.org/index.xml</link>
    <description>Recent content on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jan 2017 23:05:56 -0500</lastBuildDate>
    <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>expedia_python</title>
      <link>http://example.org/post/expedia_python/</link>
      <pubDate>Fri, 27 Jan 2017 23:05:56 -0500</pubDate>
      
      <guid>http://example.org/post/expedia_python/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
destinations = pd.read_csv(&amp;quot;../data/destinations.csv&amp;quot;)
test = pd.read_csv(&amp;quot;../data/test.csv&amp;quot;)
train = pd.read_csv(&amp;quot;../data/train.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(37670293, 24)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(2528243, 22)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.head(5)
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34; &gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;date_time&lt;/th&gt;
      &lt;th&gt;site_name&lt;/th&gt;
      &lt;th&gt;posa_continent&lt;/th&gt;
      &lt;th&gt;user_location_country&lt;/th&gt;
      &lt;th&gt;user_location_region&lt;/th&gt;
      &lt;th&gt;user_location_city&lt;/th&gt;
      &lt;th&gt;orig_destination_distance&lt;/th&gt;
      &lt;th&gt;user_id&lt;/th&gt;
      &lt;th&gt;is_mobile&lt;/th&gt;
      &lt;th&gt;is_package&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;srch_children_cnt&lt;/th&gt;
      &lt;th&gt;srch_rm_cnt&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
      &lt;th&gt;srch_destination_type_id&lt;/th&gt;
      &lt;th&gt;is_booking&lt;/th&gt;
      &lt;th&gt;cnt&lt;/th&gt;
      &lt;th&gt;hotel_continent&lt;/th&gt;
      &lt;th&gt;hotel_country&lt;/th&gt;
      &lt;th&gt;hotel_market&lt;/th&gt;
      &lt;th&gt;hotel_cluster&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2014-08-11 07:46:59&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;348&lt;/td&gt;
      &lt;td&gt;48862&lt;/td&gt;
      &lt;td&gt;2234.2641&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2014-08-11 08:22:12&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;348&lt;/td&gt;
      &lt;td&gt;48862&lt;/td&gt;
      &lt;td&gt;2234.2641&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2014-08-11 08:24:33&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;348&lt;/td&gt;
      &lt;td&gt;48862&lt;/td&gt;
      &lt;td&gt;2234.2641&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2014-08-09 18:05:16&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;442&lt;/td&gt;
      &lt;td&gt;35390&lt;/td&gt;
      &lt;td&gt;913.1932&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14984&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1457&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2014-08-09 18:08:18&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;442&lt;/td&gt;
      &lt;td&gt;35390&lt;/td&gt;
      &lt;td&gt;913.6259&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14984&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1457&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows Ã— 24 columns&lt;/p&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.head(5)
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;date_time&lt;/th&gt;
      &lt;th&gt;site_name&lt;/th&gt;
      &lt;th&gt;posa_continent&lt;/th&gt;
      &lt;th&gt;user_location_country&lt;/th&gt;
      &lt;th&gt;user_location_region&lt;/th&gt;
      &lt;th&gt;user_location_city&lt;/th&gt;
      &lt;th&gt;orig_destination_distance&lt;/th&gt;
      &lt;th&gt;user_id&lt;/th&gt;
      &lt;th&gt;is_mobile&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;srch_ci&lt;/th&gt;
      &lt;th&gt;srch_co&lt;/th&gt;
      &lt;th&gt;srch_adults_cnt&lt;/th&gt;
      &lt;th&gt;srch_children_cnt&lt;/th&gt;
      &lt;th&gt;srch_rm_cnt&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
      &lt;th&gt;srch_destination_type_id&lt;/th&gt;
      &lt;th&gt;hotel_continent&lt;/th&gt;
      &lt;th&gt;hotel_country&lt;/th&gt;
      &lt;th&gt;hotel_market&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2015-09-03 17:09:54&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;37449&lt;/td&gt;
      &lt;td&gt;5539.0567&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2016-05-19&lt;/td&gt;
      &lt;td&gt;2016-05-23&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12243&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;204&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2015-09-24 17:38:35&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;37449&lt;/td&gt;
      &lt;td&gt;5873.2923&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2016-05-12&lt;/td&gt;
      &lt;td&gt;2016-05-15&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14474&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;204&lt;/td&gt;
      &lt;td&gt;1540&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2015-06-07 15:53:02&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;142&lt;/td&gt;
      &lt;td&gt;17440&lt;/td&gt;
      &lt;td&gt;3975.9776&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2015-07-26&lt;/td&gt;
      &lt;td&gt;2015-07-27&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;11353&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;699&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2015-09-14 14:49:10&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;258&lt;/td&gt;
      &lt;td&gt;34156&lt;/td&gt;
      &lt;td&gt;1508.5975&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2015-09-14&lt;/td&gt;
      &lt;td&gt;2015-09-16&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2015-07-17 09:32:04&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;467&lt;/td&gt;
      &lt;td&gt;36345&lt;/td&gt;
      &lt;td&gt;66.7913&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2015-07-22&lt;/td&gt;
      &lt;td&gt;2015-07-23&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;11812&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;538&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows Ã— 22 columns&lt;/p&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;hotel_cluster&amp;quot;].value_counts()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;91    1043720
41     772743
48     754033
64     704734
65     670960
5      620194
98     589178
59     570291
42     551605
21     550092
70     545572
18     545284
83     534132
46     534038
25     530591
62     518809
95     509266
28     507016
68     503797
82     503755
37     496061
50     489892
30     489287
9      488328
58     483253
97     479446
16     477868
72     457463
1      452694
99     444887
       ...   
19     282893
84     278264
66     273505
38     269246
87     260398
23     259233
12     259022
31     257587
67     255946
43     253578
7      252447
54     250745
92     244343
89     243560
45     241408
49     240124
3      225250
80     220218
60     217919
71     216054
93     214293
86     209054
14     192299
75     165226
24     164127
35     139122
53     134812
88     107784
27     105040
74      48355
Name: hotel_cluster, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Index([u&#39;id&#39;, u&#39;date_time&#39;, u&#39;site_name&#39;, u&#39;posa_continent&#39;,
       u&#39;user_location_country&#39;, u&#39;user_location_region&#39;,
       u&#39;user_location_city&#39;, u&#39;orig_destination_distance&#39;, u&#39;user_id&#39;,
       u&#39;is_mobile&#39;, u&#39;is_package&#39;, u&#39;channel&#39;, u&#39;srch_ci&#39;, u&#39;srch_co&#39;,
       u&#39;srch_adults_cnt&#39;, u&#39;srch_children_cnt&#39;, u&#39;srch_rm_cnt&#39;,
       u&#39;srch_destination_id&#39;, u&#39;srch_destination_type_id&#39;, u&#39;hotel_continent&#39;,
       u&#39;hotel_country&#39;, u&#39;hotel_market&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.dtypes
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;date_time                     object
site_name                      int64
posa_continent                 int64
user_location_country          int64
user_location_region           int64
user_location_city             int64
orig_destination_distance    float64
user_id                        int64
is_mobile                      int64
is_package                     int64
channel                        int64
srch_ci                       object
srch_co                       object
srch_adults_cnt                int64
srch_children_cnt              int64
srch_rm_cnt                    int64
srch_destination_id            int64
srch_destination_type_id       int64
is_booking                     int64
cnt                            int64
hotel_continent                int64
hotel_country                  int64
hotel_market                   int64
hotel_cluster                  int64
dtype: object
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.dtypes
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;id                             int64
date_time                     object
site_name                      int64
posa_continent                 int64
user_location_country          int64
user_location_region           int64
user_location_city             int64
orig_destination_distance    float64
user_id                        int64
is_mobile                      int64
is_package                     int64
channel                        int64
srch_ci                       object
srch_co                       object
srch_adults_cnt                int64
srch_children_cnt              int64
srch_rm_cnt                    int64
srch_destination_id            int64
srch_destination_type_id       int64
hotel_continent                int64
hotel_country                  int64
hotel_market                   int64
dtype: object
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test_ids = set(test.user_id.unique())
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train_ids = set(train.user_id.unique())
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;intersection_count = len(test_ids &amp;amp; train_ids)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;intersection_count == len(test_ids)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;True
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;date_time&amp;quot;] = pd.to_datetime(train[&amp;quot;date_time&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;date_time&amp;quot;].head()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0   2014-08-11 07:46:59
1   2014-08-11 08:22:12
2   2014-08-11 08:24:33
3   2014-08-09 18:05:16
4   2014-08-09 18:08:18
Name: date_time, dtype: datetime64[ns]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;year&amp;quot;] = train[&amp;quot;date_time&amp;quot;].dt.year
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;month&amp;quot;] = train[&amp;quot;date_time&amp;quot;].dt.month
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import random

unique_users = train.user_id.unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sel_user_ids = [unique_users[i] for i in sorted(random.sample(range(len(unique_users)), 10000))]
sel_train = train[train.user_id.isin(sel_user_ids)]

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t1 = sel_train[((sel_train.year == 2013) | ((sel_train.year == 2014) &amp;amp; (sel_train.month &amp;lt; 8)))]
t2 = sel_train[((sel_train.year == 2014) &amp;amp; (sel_train.month &amp;gt;= 8))]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t1.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(198218, 26)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t2.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(115636, 27)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;len(sel_user_ids)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;10000
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t2 = t2[t2.is_booking == True]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;most_common_clusters = list(train.hotel_cluster.value_counts().head().index)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.hotel_cluster.value_counts().head(10)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;91    1043720
41     772743
48     754033
64     704734
65     670960
5      620194
98     589178
59     570291
42     551605
21     550092
Name: hotel_cluster, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.hotel_cluster.value_counts().head(10).index
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Int64Index([91, 41, 48, 64, 65, 5, 98, 59, 42, 21], dtype=&#39;int64&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;predictions = [most_common_clusters for i in range(t2.shape[0])]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import ml_metrics as metrics
target = [[l] for l in t2[&amp;quot;hotel_cluster&amp;quot;]]
metrics.mapk(target, predictions, k = 5)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0.066330720418066424
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.corr()[&amp;quot;hotel_cluster&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;site_name                   -0.022408
posa_continent               0.014938
user_location_country       -0.010477
user_location_region         0.007453
user_location_city           0.000831
orig_destination_distance    0.007260
user_id                      0.001052
is_mobile                    0.008412
is_package                   0.038733
channel                      0.000707
srch_adults_cnt              0.012309
srch_children_cnt            0.016261
srch_rm_cnt                 -0.005954
srch_destination_id         -0.011712
srch_destination_type_id    -0.032850
is_booking                  -0.021548
cnt                          0.002944
hotel_continent             -0.013963
hotel_country               -0.024289
hotel_market                 0.034205
hotel_cluster                1.000000
year                        -0.001050
month                       -0.000560
Name: hotel_cluster, dtype: float64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;destinations.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(62106, 150)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;destinations.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
      &lt;th&gt;d1&lt;/th&gt;
      &lt;th&gt;d2&lt;/th&gt;
      &lt;th&gt;d3&lt;/th&gt;
      &lt;th&gt;d4&lt;/th&gt;
      &lt;th&gt;d5&lt;/th&gt;
      &lt;th&gt;d6&lt;/th&gt;
      &lt;th&gt;d7&lt;/th&gt;
      &lt;th&gt;d8&lt;/th&gt;
      &lt;th&gt;d9&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;d140&lt;/th&gt;
      &lt;th&gt;d141&lt;/th&gt;
      &lt;th&gt;d142&lt;/th&gt;
      &lt;th&gt;d143&lt;/th&gt;
      &lt;th&gt;d144&lt;/th&gt;
      &lt;th&gt;d145&lt;/th&gt;
      &lt;th&gt;d146&lt;/th&gt;
      &lt;th&gt;d147&lt;/th&gt;
      &lt;th&gt;d148&lt;/th&gt;
      &lt;th&gt;d149&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-1.897627&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-1.897627&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.082564&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.031597&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;-2.183490&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.189562&lt;/td&gt;
      &lt;td&gt;-2.105819&lt;/td&gt;
      &lt;td&gt;-2.075407&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.118483&lt;/td&gt;
      &lt;td&gt;-2.140393&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.196379&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.192009&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.057548&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.115485&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.161081&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;-2.189562&lt;/td&gt;
      &lt;td&gt;-2.187783&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.171153&lt;/td&gt;
      &lt;td&gt;-2.152303&lt;/td&gt;
      &lt;td&gt;-2.056618&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.145911&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.187356&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.191779&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.185161&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.188037&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows Ã— 150 columns&lt;/p&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;x = [&amp;quot;d{0}&amp;quot;.format(i + 1) for i in range(149)]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.decomposition import PCA

pca = PCA(n_components = 3)
dest_small = pca.fit_transform(destinations[[&amp;quot;d{0}&amp;quot;.format(i + 1) for i in range(149)]])
dest_small = pd.DataFrame(dest_small)
dest_small[&amp;quot;srch_destination_id&amp;quot;] = destinations[&amp;quot;srch_destination_id&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;/Users/uyen/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:368: UserWarning: The number of power iterations is increased to 7 to achieve higher precision.
  warnings.warn(&amp;quot;The number of power iterations is increased to &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dest_small.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;-0.044268&lt;/td&gt;
      &lt;td&gt;0.169419&lt;/td&gt;
      &lt;td&gt;0.032523&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;-0.440761&lt;/td&gt;
      &lt;td&gt;0.077405&lt;/td&gt;
      &lt;td&gt;-0.091572&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;0.001033&lt;/td&gt;
      &lt;td&gt;0.020677&lt;/td&gt;
      &lt;td&gt;0.012108&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;-0.480467&lt;/td&gt;
      &lt;td&gt;-0.040345&lt;/td&gt;
      &lt;td&gt;-0.019320&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;-0.207253&lt;/td&gt;
      &lt;td&gt;-0.042694&lt;/td&gt;
      &lt;td&gt;-0.011744&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;```python
def cal_fast_features(df):
    df[&amp;ldquo;date_time&amp;rdquo;] = pd.to_datetime(df[&amp;ldquo;date_time&amp;rdquo;])
    df[&amp;ldquo;srch_ci&amp;rdquo;] = pd.to_datetime(df[&amp;ldquo;srch_ci&amp;rdquo;], format = &amp;lsquo;%Y-%md-%d&amp;rsquo;, errors = &amp;ldquo;coerce&amp;rdquo;)
    df[&amp;ldquo;srch_co&amp;rdquo;] = pd.to_datetime(df[&amp;ldquo;srch_co&amp;rdquo;], format = &amp;lsquo;%Y-%m-%d&amp;rsquo;, errors = &amp;ldquo;coerce&amp;rdquo;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;props = {}
for prop in [&amp;quot;month&amp;quot;, &amp;quot;day&amp;quot;, &amp;quot;hour&amp;quot;, &amp;quot;minute&amp;quot;, &amp;quot;dayofweek&amp;quot;, &amp;quot;quarter&amp;quot;]:
    props[prop] = getattr(df[&amp;quot;date_time&amp;quot;].dt, prop)

carryover = [p for p in df.columns if p not in [&amp;quot;date_time&amp;quot;, &amp;quot;srch_ci&amp;quot;, &amp;quot;srch_co&amp;quot;]]
for prop in carryover:
    props[prop] = df[prop]

date_props = [&amp;quot;month&amp;quot;, &amp;quot;day&amp;quot;, &amp;quot;dayofweek&amp;quot;, &amp;quot;quarter&amp;quot;]

for prop in date_props:
    props[&amp;quot;ci_{0}&amp;quot;.format(prop)] = getattr(df[&amp;quot;srch_ci&amp;quot;].dt, prop)
    props[&amp;quot;co_{0}&amp;quot;.format(prop)] = getattr(df[&amp;quot;srch_co&amp;quot;].dt, prop)

props[&amp;quot;stay_span&amp;quot;] = (df[&amp;quot;srch_co&amp;quot;] - df[&amp;quot;srch_ci&amp;quot;]).astype(&#39;timedelta64[h]&#39;)

ret = pd.DataFrame(props)

ret = ret.join(dest_small, on = &amp;quot;srch_destination_id&amp;quot;, how = &amp;quot;left&amp;quot;, rsuffix = &amp;quot;dest&amp;quot;)
ret = ret.drop(&amp;quot;srch_destination_iddest&amp;quot;, axis = 1)

return ret
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;df = cal_fast_features(t1)
df.fillna(-1, inplace = True)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Factorization machines introduction</title>
      <link>http://example.org/post/fm/</link>
      <pubDate>Tue, 24 Jan 2017 15:28:54 -0500</pubDate>
      
      <guid>http://example.org/post/fm/</guid>
      <description>

&lt;p&gt;Factorization machines (FM) are a generic model class that can mimic most factorization models just by feature engineering.&lt;/p&gt;

&lt;p&gt;FMs combine feature engineering with factorization models(matrix factorization or tensor factorization) in estimating interactions between categorical variables.&lt;/p&gt;

&lt;!-- Factorization machines (FMs) uses linear regression and matrix factorization to model sparse feature interactions but in linear time.
 --&gt;

&lt;h2 id=&#34;factorization-machines-math&#34;&gt;Factorization Machines Math&lt;/h2&gt;

&lt;p&gt;$$\hat y := w_0 + \sum_{i= 1}^n w_i x_i + \sum_{i = 1}^n \sum_{j = i+1}^n \hat w_{i,j} x_i x_j$$&lt;/p&gt;

&lt;p&gt;where $\hat w_{i,j}$ are the factorized interaction parameters between pairs&lt;/p&gt;

&lt;p&gt;$$w_{i, j} = \langle \mathbf{v_i}, \mathbf{v_j}\rangle = \sum_{f = 1}^k v_{i,f} \cdot v_{j,f}$$&lt;/p&gt;

&lt;p&gt;and the model parameters $\Theta$ that have to be estimated are:
$$w_{0}, \mathbf{w} \in \mathbb{R}^n, \mathbf{V} \in \mathbb{R}^{n \times k}$$&lt;/p&gt;

&lt;p&gt;Intepretation: $w_0$ is the global bias, $w_i$ models the interaction of the i-th variable to the target and $\hat w_{i, j}$ models the factorized interaction of a pair of variables with the target.&lt;/p&gt;

&lt;p&gt;When we consider quadractic feature interactions, the complexity increases to $O(n^2)$ in the above formula. Now consider a very sparse set of features, the runtime blows up. In most cases, we instead model a very limited set of feature interactions to manage the complexity.&lt;/p&gt;

&lt;h2 id=&#34;how-do-fms-solve-the-problem&#34;&gt;How do FMs solve the problem?&lt;/h2&gt;

&lt;p&gt;In the recommendataion problem space, the sparsity problem has been dealt with a well-documented technique called (non-negative) matrix factorization&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.org/images/factorization.png&#34; alt=&#34;Example image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We factorize sparse user item matrix $( r )$ $\in \mathbb{R}^{U \times I}$ into a user matrix $(u)$ $\in \mathbb{R}^{U  \times K}$ and an item matrix $(i)$ $\in \mathbb{R}^{I \times K}$, where $K &amp;lt;&amp;lt; U$ and $K &amp;lt;&amp;lt; I$.&lt;/p&gt;

&lt;p&gt;User $(u_i)$&amp;rsquo;s preference for item $i_j$ can be approximated by $u_i \cdot i_j$.&lt;/p&gt;

&lt;p&gt;Factorization Machines takes inspiration from matrix factorization, and models the feature iteractions like using latent vectors of size $K$. As a result, every sparse feature $f_i$ has a corresponding latent vector $v_i$. And two feature&amp;rsquo;s interactions are modelled as $v_i \cdot v_j$.&lt;/p&gt;

&lt;!-- 
$$y = w_0 + \sum\_{i = 1}^n w\_i x\_i + \sum\_{i = 1}^n \sum\_{j = 1}^n \langle v\_i, v\_j \rangle$$ --&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/post/expedia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/post/expedia/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

destinations = pd.read_csv(&amp;quot;../data/destinations.csv&amp;quot;)
test = pd.read_csv(&amp;quot;../data/test.csv&amp;quot;)
train = pd.read_csv(&amp;quot;../data/train.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(37670293, 24)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(2528243, 22)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.head(5)
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;date_time&lt;/th&gt;
      &lt;th&gt;site_name&lt;/th&gt;
      &lt;th&gt;posa_continent&lt;/th&gt;
      &lt;th&gt;user_location_country&lt;/th&gt;
      &lt;th&gt;user_location_region&lt;/th&gt;
      &lt;th&gt;user_location_city&lt;/th&gt;
      &lt;th&gt;orig_destination_distance&lt;/th&gt;
      &lt;th&gt;user_id&lt;/th&gt;
      &lt;th&gt;is_mobile&lt;/th&gt;
      &lt;th&gt;is_package&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;srch_children_cnt&lt;/th&gt;
      &lt;th&gt;srch_rm_cnt&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
      &lt;th&gt;srch_destination_type_id&lt;/th&gt;
      &lt;th&gt;is_booking&lt;/th&gt;
      &lt;th&gt;cnt&lt;/th&gt;
      &lt;th&gt;hotel_continent&lt;/th&gt;
      &lt;th&gt;hotel_country&lt;/th&gt;
      &lt;th&gt;hotel_market&lt;/th&gt;
      &lt;th&gt;hotel_cluster&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2014-08-11 07:46:59&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;348&lt;/td&gt;
      &lt;td&gt;48862&lt;/td&gt;
      &lt;td&gt;2234.2641&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2014-08-11 08:22:12&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;348&lt;/td&gt;
      &lt;td&gt;48862&lt;/td&gt;
      &lt;td&gt;2234.2641&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2014-08-11 08:24:33&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;348&lt;/td&gt;
      &lt;td&gt;48862&lt;/td&gt;
      &lt;td&gt;2234.2641&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2014-08-09 18:05:16&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;442&lt;/td&gt;
      &lt;td&gt;35390&lt;/td&gt;
      &lt;td&gt;913.1932&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14984&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1457&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2014-08-09 18:08:18&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;442&lt;/td&gt;
      &lt;td&gt;35390&lt;/td&gt;
      &lt;td&gt;913.6259&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14984&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1457&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows Ã— 24 columns&lt;/p&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.head(5)
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;date_time&lt;/th&gt;
      &lt;th&gt;site_name&lt;/th&gt;
      &lt;th&gt;posa_continent&lt;/th&gt;
      &lt;th&gt;user_location_country&lt;/th&gt;
      &lt;th&gt;user_location_region&lt;/th&gt;
      &lt;th&gt;user_location_city&lt;/th&gt;
      &lt;th&gt;orig_destination_distance&lt;/th&gt;
      &lt;th&gt;user_id&lt;/th&gt;
      &lt;th&gt;is_mobile&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;srch_ci&lt;/th&gt;
      &lt;th&gt;srch_co&lt;/th&gt;
      &lt;th&gt;srch_adults_cnt&lt;/th&gt;
      &lt;th&gt;srch_children_cnt&lt;/th&gt;
      &lt;th&gt;srch_rm_cnt&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
      &lt;th&gt;srch_destination_type_id&lt;/th&gt;
      &lt;th&gt;hotel_continent&lt;/th&gt;
      &lt;th&gt;hotel_country&lt;/th&gt;
      &lt;th&gt;hotel_market&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2015-09-03 17:09:54&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;37449&lt;/td&gt;
      &lt;td&gt;5539.0567&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2016-05-19&lt;/td&gt;
      &lt;td&gt;2016-05-23&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12243&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;204&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2015-09-24 17:38:35&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;37449&lt;/td&gt;
      &lt;td&gt;5873.2923&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2016-05-12&lt;/td&gt;
      &lt;td&gt;2016-05-15&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;14474&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;204&lt;/td&gt;
      &lt;td&gt;1540&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2015-06-07 15:53:02&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;142&lt;/td&gt;
      &lt;td&gt;17440&lt;/td&gt;
      &lt;td&gt;3975.9776&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2015-07-26&lt;/td&gt;
      &lt;td&gt;2015-07-27&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;11353&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;699&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2015-09-14 14:49:10&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;258&lt;/td&gt;
      &lt;td&gt;34156&lt;/td&gt;
      &lt;td&gt;1508.5975&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2015-09-14&lt;/td&gt;
      &lt;td&gt;2015-09-16&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8250&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;628&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2015-07-17 09:32:04&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;467&lt;/td&gt;
      &lt;td&gt;36345&lt;/td&gt;
      &lt;td&gt;66.7913&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2015-07-22&lt;/td&gt;
      &lt;td&gt;2015-07-23&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;11812&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;538&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows Ã— 22 columns&lt;/p&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;hotel_cluster&amp;quot;].value_counts()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;91    1043720
41     772743
48     754033
64     704734
65     670960
5      620194
98     589178
59     570291
42     551605
21     550092
70     545572
18     545284
83     534132
46     534038
25     530591
62     518809
95     509266
28     507016
68     503797
82     503755
37     496061
50     489892
30     489287
9      488328
58     483253
97     479446
16     477868
72     457463
1      452694
99     444887
       ...   
19     282893
84     278264
66     273505
38     269246
87     260398
23     259233
12     259022
31     257587
67     255946
43     253578
7      252447
54     250745
92     244343
89     243560
45     241408
49     240124
3      225250
80     220218
60     217919
71     216054
93     214293
86     209054
14     192299
75     165226
24     164127
35     139122
53     134812
88     107784
27     105040
74      48355
Name: hotel_cluster, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.columns
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Index([u&#39;id&#39;, u&#39;date_time&#39;, u&#39;site_name&#39;, u&#39;posa_continent&#39;,
       u&#39;user_location_country&#39;, u&#39;user_location_region&#39;,
       u&#39;user_location_city&#39;, u&#39;orig_destination_distance&#39;, u&#39;user_id&#39;,
       u&#39;is_mobile&#39;, u&#39;is_package&#39;, u&#39;channel&#39;, u&#39;srch_ci&#39;, u&#39;srch_co&#39;,
       u&#39;srch_adults_cnt&#39;, u&#39;srch_children_cnt&#39;, u&#39;srch_rm_cnt&#39;,
       u&#39;srch_destination_id&#39;, u&#39;srch_destination_type_id&#39;, u&#39;hotel_continent&#39;,
       u&#39;hotel_country&#39;, u&#39;hotel_market&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.dtypes
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;date_time                     object
site_name                      int64
posa_continent                 int64
user_location_country          int64
user_location_region           int64
user_location_city             int64
orig_destination_distance    float64
user_id                        int64
is_mobile                      int64
is_package                     int64
channel                        int64
srch_ci                       object
srch_co                       object
srch_adults_cnt                int64
srch_children_cnt              int64
srch_rm_cnt                    int64
srch_destination_id            int64
srch_destination_type_id       int64
is_booking                     int64
cnt                            int64
hotel_continent                int64
hotel_country                  int64
hotel_market                   int64
hotel_cluster                  int64
dtype: object
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test.dtypes
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;id                             int64
date_time                     object
site_name                      int64
posa_continent                 int64
user_location_country          int64
user_location_region           int64
user_location_city             int64
orig_destination_distance    float64
user_id                        int64
is_mobile                      int64
is_package                     int64
channel                        int64
srch_ci                       object
srch_co                       object
srch_adults_cnt                int64
srch_children_cnt              int64
srch_rm_cnt                    int64
srch_destination_id            int64
srch_destination_type_id       int64
hotel_continent                int64
hotel_country                  int64
hotel_market                   int64
dtype: object
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;test_ids = set(test.user_id.unique())
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train_ids = set(train.user_id.unique())
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;intersection_count = len(test_ids &amp;amp; train_ids)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;intersection_count == len(test_ids)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;True
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;date_time&amp;quot;] = pd.to_datetime(train[&amp;quot;date_time&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;date_time&amp;quot;].head()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0   2014-08-11 07:46:59
1   2014-08-11 08:22:12
2   2014-08-11 08:24:33
3   2014-08-09 18:05:16
4   2014-08-09 18:08:18
Name: date_time, dtype: datetime64[ns]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;year&amp;quot;] = train[&amp;quot;date_time&amp;quot;].dt.year
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train[&amp;quot;month&amp;quot;] = train[&amp;quot;date_time&amp;quot;].dt.month
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import random

unique_users = train.user_id.unique()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sel_user_ids = [unique_users[i] for i in sorted(random.sample(range(len(unique_users)), 10000))]
sel_train = train[train.user_id.isin(sel_user_ids)]

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t1 = sel_train[((sel_train.year == 2013) | ((sel_train.year == 2014) &amp;amp; (sel_train.month &amp;lt; 8)))]
t2 = sel_train[((sel_train.year == 2014) &amp;amp; (sel_train.month &amp;gt;= 8))]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t1.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(198218, 26)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t2.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(115636, 27)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;len(sel_user_ids)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;10000
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t2 = t2[t2.is_booking == True]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;most_common_clusters = list(train.hotel_cluster.value_counts().head().index)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.hotel_cluster.value_counts().head(10)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;91    1043720
41     772743
48     754033
64     704734
65     670960
5      620194
98     589178
59     570291
42     551605
21     550092
Name: hotel_cluster, dtype: int64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.hotel_cluster.value_counts().head(10).index
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Int64Index([91, 41, 48, 64, 65, 5, 98, 59, 42, 21], dtype=&#39;int64&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;predictions = [most_common_clusters for i in range(t2.shape[0])]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import ml_metrics as metrics
target = [[l] for l in t2[&amp;quot;hotel_cluster&amp;quot;]]
metrics.mapk(target, predictions, k = 5)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0.066330720418066424
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;train.corr()[&amp;quot;hotel_cluster&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;site_name                   -0.022408
posa_continent               0.014938
user_location_country       -0.010477
user_location_region         0.007453
user_location_city           0.000831
orig_destination_distance    0.007260
user_id                      0.001052
is_mobile                    0.008412
is_package                   0.038733
channel                      0.000707
srch_adults_cnt              0.012309
srch_children_cnt            0.016261
srch_rm_cnt                 -0.005954
srch_destination_id         -0.011712
srch_destination_type_id    -0.032850
is_booking                  -0.021548
cnt                          0.002944
hotel_continent             -0.013963
hotel_country               -0.024289
hotel_market                 0.034205
hotel_cluster                1.000000
year                        -0.001050
month                       -0.000560
Name: hotel_cluster, dtype: float64
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;destinations.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;(62106, 150)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;destinations.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
      &lt;th&gt;d1&lt;/th&gt;
      &lt;th&gt;d2&lt;/th&gt;
      &lt;th&gt;d3&lt;/th&gt;
      &lt;th&gt;d4&lt;/th&gt;
      &lt;th&gt;d5&lt;/th&gt;
      &lt;th&gt;d6&lt;/th&gt;
      &lt;th&gt;d7&lt;/th&gt;
      &lt;th&gt;d8&lt;/th&gt;
      &lt;th&gt;d9&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;d140&lt;/th&gt;
      &lt;th&gt;d141&lt;/th&gt;
      &lt;th&gt;d142&lt;/th&gt;
      &lt;th&gt;d143&lt;/th&gt;
      &lt;th&gt;d144&lt;/th&gt;
      &lt;th&gt;d145&lt;/th&gt;
      &lt;th&gt;d146&lt;/th&gt;
      &lt;th&gt;d147&lt;/th&gt;
      &lt;th&gt;d148&lt;/th&gt;
      &lt;th&gt;d149&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-1.897627&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-1.897627&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
      &lt;td&gt;-2.198657&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.082564&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.031597&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.165028&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
      &lt;td&gt;-2.181690&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;-2.183490&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.189562&lt;/td&gt;
      &lt;td&gt;-2.105819&lt;/td&gt;
      &lt;td&gt;-2.075407&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.118483&lt;/td&gt;
      &lt;td&gt;-2.140393&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.196379&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.192009&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.224164&lt;/td&gt;
      &lt;td&gt;-2.057548&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.115485&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.161081&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
      &lt;td&gt;-2.177409&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;-2.189562&lt;/td&gt;
      &lt;td&gt;-2.187783&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.171153&lt;/td&gt;
      &lt;td&gt;-2.152303&lt;/td&gt;
      &lt;td&gt;-2.056618&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.145911&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;-2.187356&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.191779&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.185161&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.194008&lt;/td&gt;
      &lt;td&gt;-2.188037&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows Ã— 150 columns&lt;/p&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;x = [&amp;quot;d{0}&amp;quot;.format(i + 1) for i in range(149)]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.decomposition import PCA

pca = PCA(n_components = 3)
dest_small = pca.fit_transform(destinations[[&amp;quot;d{0}&amp;quot;.format(i + 1) for i in range(149)]])
dest_small = pd.DataFrame(dest_small)
dest_small[&amp;quot;srch_destination_id&amp;quot;] = destinations[&amp;quot;srch_destination_id&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;/Users/uyen/.local/lib/python2.7/site-packages/sklearn/utils/extmath.py:368: UserWarning: The number of power iterations is increased to 7 to achieve higher precision.
  warnings.warn(&amp;quot;The number of power iterations is increased to &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dest_small.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;srch_destination_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;-0.044268&lt;/td&gt;
      &lt;td&gt;0.169419&lt;/td&gt;
      &lt;td&gt;0.032523&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;-0.440761&lt;/td&gt;
      &lt;td&gt;0.077405&lt;/td&gt;
      &lt;td&gt;-0.091572&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;0.001033&lt;/td&gt;
      &lt;td&gt;0.020677&lt;/td&gt;
      &lt;td&gt;0.012108&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;-0.480467&lt;/td&gt;
      &lt;td&gt;-0.040345&lt;/td&gt;
      &lt;td&gt;-0.019320&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;-0.207253&lt;/td&gt;
      &lt;td&gt;-0.042694&lt;/td&gt;
      &lt;td&gt;-0.011744&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def cal_fast_features(df):
    df[&amp;quot;date_time&amp;quot;] = pd.to_datetime(df[&amp;quot;date_time&amp;quot;])
    df[&amp;quot;srch_ci&amp;quot;] = pd.to_datetime(df[&amp;quot;srch_ci&amp;quot;], format = &#39;%Y-%md-%d&#39;, errors = &amp;quot;coerce&amp;quot;)
    df[&amp;quot;srch_co&amp;quot;] = pd.to_datetime(df[&amp;quot;srch_co&amp;quot;], format = &#39;%Y-%m-%d&#39;, errors = &amp;quot;coerce&amp;quot;)
    
    props = {}
    for prop in [&amp;quot;month&amp;quot;, &amp;quot;day&amp;quot;, &amp;quot;hour&amp;quot;, &amp;quot;minute&amp;quot;, &amp;quot;dayofweek&amp;quot;, &amp;quot;quarter&amp;quot;]:
        props[prop] = getattr(df[&amp;quot;date_time&amp;quot;].dt, prop)
        
    carryover = [p for p in df.columns if p not in [&amp;quot;date_time&amp;quot;, &amp;quot;srch_ci&amp;quot;, &amp;quot;srch_co&amp;quot;]]
    for prop in carryover:
        props[prop] = df[prop]
    
    date_props = [&amp;quot;month&amp;quot;, &amp;quot;day&amp;quot;, &amp;quot;dayofweek&amp;quot;, &amp;quot;quarter&amp;quot;]
    
    for prop in date_props:
        props[&amp;quot;ci_{0}&amp;quot;.format(prop)] = getattr(df[&amp;quot;srch_ci&amp;quot;].dt, prop)
        props[&amp;quot;co_{0}&amp;quot;.format(prop)] = getattr(df[&amp;quot;srch_co&amp;quot;].dt, prop)
    
    props[&amp;quot;stay_span&amp;quot;] = (df[&amp;quot;srch_co&amp;quot;] - df[&amp;quot;srch_ci&amp;quot;]).astype(&#39;timedelta64[h]&#39;)
    
    ret = pd.DataFrame(props)
    
    ret = ret.join(dest_small, on = &amp;quot;srch_destination_id&amp;quot;, how = &amp;quot;left&amp;quot;, rsuffix = &amp;quot;dest&amp;quot;)
    ret = ret.drop(&amp;quot;srch_destination_iddest&amp;quot;, axis = 1)
    
    return ret

df = cal_fast_features(t1)
df.fillna(-1, inplace = True)

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------

NameError                                 Traceback (most recent call last)

&amp;lt;ipython-input-1-4074dcf6b225&amp;gt; in &amp;lt;module&amp;gt;()
     27     return ret
     28 
---&amp;gt; 29 df = cal_fast_features(t1)
     30 df.fillna(-1, inplace = True)


NameError: name &#39;t1&#39; is not defined
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://example.org/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/about/</guid>
      <description>&lt;p&gt;My name is Uyen. I am a data scientist at Vox Pop Labs.&lt;/p&gt;

&lt;p&gt;My contact info:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uyen [@] voxpoplabs.com&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/uyenhoang&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>